/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.projeto.pneu.programas;

import br.com.bandtec.projeto.pneu.clienteJira.ConexaoAPIJira;
import br.com.bandtec.projeto.pneu.modelos.ConexaoBanco;
import br.com.bandtec.projeto.pneu.modelos.Issue;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author LEONARDOOLIVEIRALEAL
 */
public class TelaConsultaComponente extends javax.swing.JFrame {
    private static String servidor;
    private static String tipo;
    private static String metrica;
    
    
    Integer fkServidor = 0;
    Integer fkTipoComponente = 0;
    
    public static String getServidor() {
        return servidor;
    }

    public static void setServidor(String servidor) {
        TelaConsultaComponente.servidor = servidor;
    }

    public static String getTipo() {
        return tipo;
    }

    public static void setTipo(String tipo) {
        TelaConsultaComponente.tipo = tipo;
    }

    public static String getMetrica() {
        return metrica;
    }

    public static void setMetrica(String metrica) {
        TelaConsultaComponente.metrica = metrica;
    }

    
    
    
    /**
     * Creates new form TelaConsulta
     */
    public TelaConsultaComponente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlListaCadastro = new javax.swing.JList<>();
        jlTitulo = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jcbFiltro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbTipo = new javax.swing.JComboBox<>();
        btnEditar = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jlListaCadastro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(3, 173, 227)));
        jScrollPane1.setViewportView(jlListaCadastro);

        jlTitulo.setBackground(new java.awt.Color(151, 109, 208));
        jlTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTitulo.setText("Componentes Cadastrados");

        jPanel10.setBackground(new java.awt.Color(35, 35, 35));

        jLabel9.setBackground(new java.awt.Color(151, 109, 208));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(3, 173, 227));
        jLabel9.setText("PNEU");

        btnVoltar.setBackground(new java.awt.Color(3, 173, 227));
        btnVoltar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("Fechar");
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltar)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExcluir.setBackground(new java.awt.Color(3, 173, 227));
        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jcbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFiltroActionPerformed(evt);
            }
        });

        jLabel1.setText("Servidor");

        jLabel2.setText("Componente:");

        jcbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "CPU", "DISCO", "MEMORIA" }));
        jcbTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(3, 173, 227));
        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbFiltro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(116, 116, 116))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnEditar))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        
        Integer senha_ok = 0;
        String senha = null;
        String senhaGerente = "Adm123";
        while (senha_ok == 0){
            JPasswordField pf = new JPasswordField();
            String msgGerente = "Digite a senha de Gerente";
            Integer okCxl = JOptionPane.showConfirmDialog(null, pf, msgGerente, JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (okCxl == 0) {
                senha = new String(pf.getPassword());
                Connection con = null;
                // Tenta conexão com banco MySQL
                
                    if (senha.equals(senhaGerente)){
                        String selecionado = jlListaCadastro.getSelectedValue();
        
                        String[] separar1 = selecionado.split(": ");
                        String Servidor = separar1[0];
                        String[] separar2 = separar1[1].split(" - ");
                        String tipo = separar2[0];
                        String metrica = separar2[1];
                        String fkServidor = null;
                        String fkTipoComponente = null;
                        try {
                            Class.forName(ConexaoBanco.DRIVER);
                            con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);

                            Statement stmServidor = con.createStatement();
                            String SQLSelectServidor = "select * from Servidor, TipoComponente, Componente where fkTipoComponente = idTipoComponente and fkServidor = idServidor and nomeServidor like '"+Servidor+"' and tipo like '"+tipo+"' and metrica like '"+metrica+"';";
                            ResultSet rsServidor = stmServidor.executeQuery(SQLSelectServidor);
                            while(rsServidor.next()) {
                                fkServidor = rsServidor.getString("idServidor");
                                fkTipoComponente = rsServidor.getString("idTipoComponente");
                                //ÁREA DO CASTRO NÃO MEXER POR GENTILEZA - INTERDITADO

                                String pegaValor = "select * from Componente where fkTipoComponente = "+fkTipoComponente+" and fkServidor = "+fkServidor+";";
                                PreparedStatement stmtValorID = con.prepareStatement(pegaValor);
                                ResultSet rsValorID = stmtValorID.executeQuery(pegaValor);
                                String idComponente = null;
                                while(rsValorID.next()){
                                    idComponente = rsValorID.getString("idComponente");

                                    String delValor = "delete from ValorLeitura where fkComponente = ?;";
                                    PreparedStatement stmtValor = con.prepareStatement(delValor);
                                    stmtValor.setString(1, idComponente);     
                                    stmtValor.execute();
                                }

                                String query = "delete from Componente where fkTipoComponente = ? and fkServidor = ?;";
                                PreparedStatement preparedStmt = con.prepareStatement(query);
                                preparedStmt.setString(1, fkTipoComponente);     
                                preparedStmt.setString(2, fkServidor); 

                                preparedStmt.execute();

                            }

                            Statement stm = con.createStatement();

                                    String SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente order by nomeServidor asc;";
                                    ResultSet rs = stm.executeQuery(SQLSelect);
                                    DefaultListModel dlm = new DefaultListModel();   
                                    while(rs.next()) {
                                        dlm.addElement(rs.getString("nomeServidor")+": "+ rs.getString("tipo") + " - "+ rs.getString("metrica"));
                                    }
                                    jlListaCadastro.setModel(dlm);

                                    JOptionPane.showMessageDialog(null,"O componente selecionado foi deletado","Componente deletado",JOptionPane.INFORMATION_MESSAGE);

                                    String msg = "O componente foi deletado do servidor "+Servidor+".";
                                        try {
                                            Issue novaIssue = new Issue();
                                            novaIssue.setProjectKey("BDJ");
                                            novaIssue.setSummary(msg);
                                            novaIssue.setDescription("Exclusão de componente foi executada");
                                            ConexaoAPIJira.criacao(novaIssue);

                                            Gson gson = new GsonBuilder().setPrettyPrinting().create();
                                            System.out.println("Issue criada: "+gson.toJson(novaIssue));

                                        } catch (IOException ex) {
                                            Logger.getLogger(TelaServidor.class.getName()).log(Level.SEVERE, null, ex);
                                        }

                            } catch (ClassNotFoundException | SQLException ex) {
                                Logger.getLogger(TelaConsultaComponente.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            senha_ok++;
                        }
                    
                    if (senha.equals("")){
                        JOptionPane.showMessageDialog(null, "Senha não preenchida");
                    } else if (senha_ok == 0){
                        JOptionPane.showMessageDialog(null, "Senha incorreta");
                    }
            } else {
                senha_ok++;
            }
        } 
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void jcbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFiltroActionPerformed
        // TODO add your handling code here:
        String filtrarServidor = jcbFiltro.getSelectedItem().toString();
        String filtrarTipo = jcbTipo.getSelectedItem().toString();
        Connection con = null;
        try {
            Class.forName(ConexaoBanco.DRIVER);
            con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
            Statement stm = con.createStatement();
            String SQLSelect = null;
            if (filtrarServidor.equals("Todos") && filtrarTipo.equals("Todos")){
                SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente order by nomeServidor asc;";
            } else if (!filtrarServidor.equals("Todos") && filtrarTipo.equals("Todos")){
                SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente and nomeServidor like '"+filtrarServidor+"' order by nomeServidor asc;";
            } else if (filtrarServidor.equals("Todos") && !filtrarTipo.equals("Todos")){
                SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente and tipo like '"+filtrarTipo+"' order by nomeServidor asc;";
            }
            
                ResultSet rs = stm.executeQuery(SQLSelect);
                DefaultListModel dlm = new DefaultListModel();   
                while(rs.next()) {
                    dlm.addElement(rs.getString("nomeServidor")+": "+ rs.getString("tipo") + " - "+ rs.getString("metrica"));
                }
                jlListaCadastro.setModel(dlm);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(TelaConsultaComponente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcbFiltroActionPerformed

    
    private void jcbTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoActionPerformed
        // TODO add your handling code here:
        String filtrarServidor = jcbFiltro.getSelectedItem().toString();
        String filtrarTipo = jcbTipo.getSelectedItem().toString();
        Connection con = null;
        try {
            Class.forName(ConexaoBanco.DRIVER);
            con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
            Statement stm = con.createStatement();
            String SQLSelect = null;
            if (filtrarServidor.equals("Todos") && filtrarTipo.equals("Todos")){
                SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente order by nomeServidor asc;";
            } else if (!filtrarServidor.equals("Todos") && filtrarTipo.equals("Todos")){
                SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente and nomeServidor like '"+filtrarServidor+"' order by nomeServidor asc;";
            } else if (filtrarServidor.equals("Todos") && !filtrarTipo.equals("Todos")){
                SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente and tipo like '"+filtrarTipo+"';";
            } else {
                SQLSelect = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipocomponente and nomeServidor like '"+filtrarServidor+"' and tipo like '"+filtrarTipo+"';";
            }
            
                ResultSet rs = stm.executeQuery(SQLSelect);
                DefaultListModel dlm = new DefaultListModel();   
                while(rs.next()) {
                    dlm.addElement(rs.getString("nomeServidor")+": "+ rs.getString("tipo") + " - "+ rs.getString("metrica"));
                }
                jlListaCadastro.setModel(dlm);
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(TelaConsultaComponente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcbTipoActionPerformed

    public void ColetarServidor(JComboBox servidorBox, JComboBox metricaBox, JComboBox tipoBox) {
        
            servidorBox.addItem(TelaConsultaComponente.getServidor());
            tipoBox.setSelectedItem(TelaConsultaComponente.getTipo());
            metricaBox.setSelectedItem(TelaConsultaComponente.getMetrica());
       
    }
    
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        String selecionado = jlListaCadastro.getSelectedValue();
        
        TelaEdicaoComponente telaEditaComp = new TelaEdicaoComponente();
        telaEditaComp.lbSelecionado.setText(selecionado);
        telaEditaComp.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TelaConsultaComponente().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    protected javax.swing.JComboBox<String> jcbFiltro;
    protected javax.swing.JComboBox<String> jcbTipo;
    protected javax.swing.JList<String> jlListaCadastro;
    private javax.swing.JLabel jlTitulo;
    // End of variables declaration//GEN-END:variables
}
