/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.projeto.pneu.programas;

import br.com.bandtec.projeto.pneu.clienteJira.ConexaoAPIJira;
import br.com.bandtec.projeto.pneu.modelos.ConexaoBanco;
import br.com.bandtec.projeto.pneu.modelos.Issue;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author LEONARDOOLIVEIRALEAL
 */
public class TelaConsultaServidor extends javax.swing.JFrame {

    TelaEdicaoServidor frameEdicao = new TelaEdicaoServidor();
    /**
     * Creates new form TelaConsulta
     */
    public TelaConsultaServidor() {
        initComponents();
        
    }
    
    private void ColetarLocalizacao() {
        
        Connection con = null;
        // Tenta conex√£o com banco MySQL
                
        try {
            frameEdicao.cbEstados.removeAllItems();
            Class.forName(ConexaoBanco.DRIVER);
            con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
            Statement stm = con.createStatement();
            String SQLSelect = "Select Distinct (estado) from Localizacao;";
            ResultSet rs = stm.executeQuery(SQLSelect);
            
            while(rs.next()) {
                String estado = rs.getString("estado");
                frameEdicao.cbEstados.addItem(estado);
            }
        }catch (SQLException ex) {
            Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlListaCadastro = new javax.swing.JList<>();
        jlTitulo = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btCadastrar3 = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox<>();
        btnEditar = new javax.swing.JButton();

        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jlListaCadastro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(3, 173, 227)));
        jScrollPane1.setViewportView(jlListaCadastro);

        jlTitulo.setBackground(new java.awt.Color(151, 109, 208));
        jlTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTitulo.setText("Servidores Cadastrados");

        jPanel10.setBackground(new java.awt.Color(35, 35, 35));

        jLabel9.setBackground(new java.awt.Color(151, 109, 208));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(3, 173, 227));
        jLabel9.setText("PNEU");

        btCadastrar3.setBackground(new java.awt.Color(3, 173, 227));
        btCadastrar3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCadastrar3.setForeground(new java.awt.Color(255, 255, 255));
        btCadastrar3.setText("Voltar");
        btCadastrar3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCadastrar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCadastrar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE)
                .addComponent(btCadastrar3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btCadastrar3)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExcluir.setBackground(new java.awt.Color(3, 173, 227));
        btnExcluir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir");
        btnExcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jLabel1.setText("Estado");

        jcbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEstadoActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(3, 173, 227));
        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane1)
                        .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExcluir)
                    .addComponent(btnEditar))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btCadastrar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrar3ActionPerformed
        
        dispose();
    }//GEN-LAST:event_btCadastrar3ActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        Integer senha_ok = 0;
        String senha = null;
        String senhaGerente = "Adm123";
        while (senha_ok == 0){
            JPasswordField pf = new JPasswordField();
            String msgGerente = "Digite a senha de Gerente";
            Integer okCxl = JOptionPane.showConfirmDialog(null, pf, msgGerente, JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (okCxl == 0) {
                senha = new String(pf.getPassword());
                Connection con = null;
                // Tenta conex√£o com banco MySQL
                try {
                    Class.forName(ConexaoBanco.DRIVER);
                    con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);

                    
                        if (senha.equals(senhaGerente)){
                            senha_ok++;
                            
                            String separarServidor = jlListaCadastro.getSelectedValue();
                            String[] separar1 = separarServidor.split(": ");
                            String nomeServidor = separar1[0];
                            
                            try {
                                Class.forName(ConexaoBanco.DRIVER);
                                con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
                                Statement stm = con.createStatement();
                                String SQLSelectComponente = "select * from Servidor;";
                                ResultSet rsComponente = stm.executeQuery(SQLSelectComponente);
                                while(rsComponente.next()) {
                                    String query = "delete from Componente where fkServidor = ?;";
                                    PreparedStatement preparedStmt = con.prepareStatement(query);
                                    preparedStmt.setInt(1, Integer.parseInt(rsComponente.getString("idServidor")));

                                    preparedStmt.execute();
                                }
                                // Verifica se algum dos campos est√° vazio
                                String query = "delete from Servidor where nomeServidor = ?";
                                PreparedStatement preparedStmt = con.prepareStatement(query);
                                preparedStmt.setString(1, nomeServidor);

                                preparedStmt.execute();



                                String SQLSelect = "Select * from Servidor, Localizacao where fkLocalizacao = idLocalizacao;";
                                ResultSet rs = stm.executeQuery(SQLSelect);
                                DefaultListModel dlm = new DefaultListModel();   
                                while(rs.next()) {
                                    String nomeServidor1 = rs.getString("nomeServidor");
                                    String estadoServidor = rs.getString("estado");
                                    String cidadeServidor = rs.getString("cidade");
                                    String bairroServidor = rs.getString("bairro");
                                    dlm.addElement(nomeServidor1 +": "+estadoServidor+" - "+cidadeServidor+", "+bairroServidor);
                                }
                                jlListaCadastro.setModel(dlm);

                                JOptionPane.showMessageDialog(null,"O servidor selecionado foi deletado","Servidor deletado",JOptionPane.INFORMATION_MESSAGE);

                                String msg = "O servidor "+nomeServidor+" foi deletado.";
                                String titulo = "Exclus√£o de servidor executada";
                                try {
                                    Issue novaIssue = new Issue();
                                    ConexaoAPIJira.criacao(novaIssue, msg, titulo);
                                } catch (IOException ex) {
                                    Logger.getLogger(TelaServidor.class.getName()).log(Level.SEVERE, null, ex);
                                }

                            } catch (ClassNotFoundException | SQLException ex) {
                                Logger.getLogger(TelaConsultaComponente.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    
                    if (senha.equals("")){
                        JOptionPane.showMessageDialog(null, "Senha n√£o preenchida");
                    } else if (senha_ok == 0){
                        JOptionPane.showMessageDialog(null, "Senha incorreta");
                    }
                // Em caso de erro com conex√£o, gera aviso
                }catch(SQLException e){
                    e.printStackTrace(); //vejamos que erro foi gerado e quem o gerou
                    JOptionPane.showMessageDialog(null,"Erro na conex√£o, com o banco de dados!","Erro de Conex√£o",JOptionPane.WARNING_MESSAGE);
                } catch (ClassNotFoundException ex) { 
                Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }finally { 
                    try{ 
                        con.close(); // Ap√≥s finalizar processo, fecha a conex√£o
                    }catch(SQLException onConClose){
                        System.out.println("Houve erro no fechamento da conex√£o");
                        JOptionPane.showMessageDialog(null,"Erro na conex√£o, com o banco de dados!","Erro de conex√£o",JOptionPane.WARNING_MESSAGE);
                        onConClose.printStackTrace();
                    }
                }
            } else {
                senha_ok++;
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void jcbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEstadoActionPerformed
        
        Connection con = null;
        try {
            Class.forName(ConexaoBanco.DRIVER);
            con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
            
            // Define o que ir√° aparecer na lista de servidores
            // Filtrando por estado
            String estado = jcbEstado.getSelectedItem().toString();
            if (estado.equals("Todos")){
                Statement stm = con.createStatement();
                String SQLSelectServidor = "Select * from Servidor, Localizacao where fkLocalizacao = idLocalizacao;";
                ResultSet rsServidor = stm.executeQuery(SQLSelectServidor);
                DefaultListModel dlm = new DefaultListModel();
                
                // Adiciona todos os servidores √† lista
                while(rsServidor.next()) {
                    String nomeServidor1 = rsServidor.getString("nomeServidor");
                    String estadoServidor = rsServidor.getString("estado");
                    String cidadeServidor = rsServidor.getString("cidade");
                    String bairroServidor = rsServidor.getString("bairro");
                    dlm.addElement(nomeServidor1 +": "+estadoServidor+" - "+cidadeServidor+", "+bairroServidor);
                }
                jlListaCadastro.setModel(dlm);
            } else {
                Statement stm = con.createStatement();
                String SQLSelectServidor = "Select * from Servidor, Localizacao where idLocalizacao = fkLocalizacao and estado like '"+estado+"';";
                ResultSet rsServidor = stm.executeQuery(SQLSelectServidor);
                DefaultListModel dlm = new DefaultListModel();
                
                // Adiciona servidores √† lista de acordo com o estado selecionado
                while(rsServidor.next()) {
                    String nomeServidor1 = rsServidor.getString("nomeServidor");
                    String estadoServidor = rsServidor.getString("estado");
                    String cidadeServidor = rsServidor.getString("cidade");
                    String bairroServidor = rsServidor.getString("bairro");
                    dlm.addElement(nomeServidor1 +": "+estadoServidor+" - "+cidadeServidor+", "+bairroServidor);
                }
                jlListaCadastro.setModel(dlm);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(TelaConsultaServidor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jcbEstadoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        ColetarLocalizacao();
        String separarServidor = jlListaCadastro.getSelectedValue();
        String[] separar1 = separarServidor.split(": ");
        String[] separar2 = separar1[1].split(" - ");
        String[] separar3 = separar2[1].split(", ");
        String nomeServidor = separar1[0];
        String estadoServidor = separar2[0];
        String cidadeServidor = separar3[0];
        String bairroServidor = separar3[1];
        
        System.out.println(nomeServidor);
        System.out.println(estadoServidor);
        System.out.println(cidadeServidor);
        System.out.println(bairroServidor);
        
        frameEdicao.setarValores(nomeServidor, estadoServidor, cidadeServidor+", "+bairroServidor);
        frameEdicao.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TelaConsultaServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TelaConsultaServidor().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCadastrar3;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JComboBox<String> jcbEstado;
    protected javax.swing.JList<String> jlListaCadastro;
    private javax.swing.JLabel jlTitulo;
    // End of variables declaration//GEN-END:variables
}
