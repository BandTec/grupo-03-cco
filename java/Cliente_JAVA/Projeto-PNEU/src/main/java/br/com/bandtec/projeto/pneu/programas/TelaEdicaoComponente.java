/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.projeto.pneu.programas;

import br.com.bandtec.projeto.pneu.clienteJira.ConexaoAPIJira;
import br.com.bandtec.projeto.pneu.modelos.Componente;
import br.com.bandtec.projeto.pneu.modelos.ConexaoBanco;
import br.com.bandtec.projeto.pneu.modelos.Issue;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author castr
 */
public class TelaEdicaoComponente extends javax.swing.JFrame {
    
    TelaConsultaComponente telaConsComp = new TelaConsultaComponente();
    Componente componente = new Componente();
    /**
     * Creates new form TelaEdicaoComponente
     */
    public TelaEdicaoComponente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        jcbCompEdita = new javax.swing.JComboBox<>();
        lbSelecionado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(421, 560));

        jPanel10.setBackground(new java.awt.Color(35, 35, 35));

        jLabel9.setBackground(new java.awt.Color(151, 109, 208));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(3, 173, 227));
        jLabel9.setText("PNEU");

        btnVoltar.setBackground(new java.awt.Color(3, 173, 227));
        btnVoltar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("Voltar");
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 264, Short.MAX_VALUE)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltar)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setBackground(new java.awt.Color(151, 109, 208));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Componente");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(65, 65, 65));
        jLabel1.setText("Componente");

        btnEditar.setBackground(new java.awt.Color(3, 173, 227));
        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jcbCompEdita.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CPU - Porcentagem", "CPU - Clock", "CPU - Temperatura", "Memória - Porcentagem", "Memória - GB", "Disco - Porcentagem", "Disco - GB" }));
        jcbCompEdita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCompEditaActionPerformed(evt);
            }
        });

        lbSelecionado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 103, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcbCompEdita, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(103, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(lbSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel10)
                .addGap(29, 29, 29)
                .addComponent(lbSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jcbCompEdita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
     
     
    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        TelaConsultaComponente frameConsulta = new TelaConsultaComponente();
        frameConsulta.setVisible(true);
        Connection con = null;
            try {
            Class.forName(ConexaoBanco.DRIVER);
            con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
            Statement stm = con.createStatement();
            String SQLSelectComponente = "select * from Servidor, Componente, tipoComponente where fkServidor = idServidor and fkTipoComponente = idTipoComponente order by nomeServidor asc;";
            ResultSet rsComponente = stm.executeQuery(SQLSelectComponente);
            DefaultListModel dlm = new DefaultListModel();
            while(rsComponente.next()) {
                dlm.addElement(rsComponente.getString("nomeServidor")+": "+ rsComponente.getString("tipo") + ", "+ rsComponente.getString("metrica"));
            }
            frameConsulta.jlListaCadastro.setModel(dlm);
            
            String SQLSelectServidor = "select * from Servidor order by nomeServidor asc;";
            ResultSet rsServidor = stm.executeQuery(SQLSelectServidor);
            frameConsulta.jcbFiltro.addItem("Todos");
            while(rsServidor.next()) {
                frameConsulta.jcbFiltro.addItem(rsServidor.getString("nomeServidor"));
            }
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(TelaServidor.class.getName()).log(Level.SEVERE, null, ex);
        } finally { 
                try{ 
                    con.close(); // Após finalizar processo, fecha a conexão
                }catch(SQLException onConClose){
                    System.out.println("Houve erro no fechamento da conexão");
                    JOptionPane.showMessageDialog(null,"Erro na conexão, com o banco de dados!","Erro de conexão",JOptionPane.WARNING_MESSAGE);
                    onConClose.printStackTrace();
                }
            }
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        String[] separar = lbSelecionado.getText().split(": ");
        String tipoAntigo = separar[1];
        String nomeServidor = separar[0];
        String[] separar2 = separar[1].split(" - ");
        String tipo = separar2[0];
        String metrica = separar2[1];
        
        String novoTipo = jcbCompEdita.getSelectedItem().toString();
        Integer novofk = 0;
        if(novoTipo.equals("CPU - Porcentagem")){
            novofk = 1;
        } else if(novoTipo.equals("CPU - Clock")){
            novofk = 2;
        } else if(novoTipo.equals("CPU - Temperatura")){
            novofk = 3;
        } else if(novoTipo.equals("Memória - Porcentagem")){
            novofk = 4;
        } else if(novoTipo.equals("Memória - GB")){
            novofk = 5;
        } else if(novoTipo.equals("Disco - Porcentagem")){
            novofk = 6;
        } else {
            novofk = 7;
        }
        
        Connection con = null;
        try {
            
            Class.forName(ConexaoBanco.DRIVER);
            con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
            Integer senha_ok = 0;
        String senha = null;
        while (senha_ok == 0){
            JPasswordField pf = new JPasswordField();
            String msgGerente = "Digite a senha de Gerente";
            Integer okCxl = JOptionPane.showConfirmDialog(null, pf, msgGerente, JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
            if (okCxl == 0) {
                senha = new String(pf.getPassword());
                
                // Tenta conexão com banco MySQL
                try {
                    Class.forName(ConexaoBanco.DRIVER);
                    con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);

                    Statement stmGerente = con.createStatement();
                    String SQL = "Select * from Usuario where cargo like 'Gerente' and senha like '"+senha+"';";
                    ResultSet rsGerente = stmGerente.executeQuery(SQL);
                    String senhaGerente = "Adm123";
                        if (senha.equals(senhaGerente)){
                            senha_ok++;
                            if (!separar[1].equals(novoTipo)){
                                Statement stm = con.createStatement();
                                String queryLocalizacao = "select * from Servidor, TipoComponente, Componente where nomeServidor like '"+nomeServidor+"' and tipo like '"+tipo+"' and metrica like '"+metrica+"' and fkServidor = idServidor and fkTipoComponente = idTipoComponente;";
                                ResultSet rs = stm.executeQuery(queryLocalizacao);
                
                    while(rs.next()) {
                        String fkServidor = rs.getString("idServidor");
                        String fkTipoComponente = rs.getString("idTipoComponente");
                        String query2 = "UPDATE Componente SET fkTipoComponente = '"+novofk+"' WHERE fkTipoComponente = "+fkTipoComponente+" and fkServidor = "+fkServidor+";";
                        PreparedStatement preparedStmt = con.prepareStatement(query2);
                        preparedStmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Componente editado com sucesso");
                        
                        String msg = "O componente "+tipoAntigo+" do servidor "+nomeServidor+" foi editado para "+novoTipo+".";
                        String titulo = "Edição de componente executada";
                        try {
                            Issue novaIssue = new Issue();
                            ConexaoAPIJira.criacao(novaIssue, msg, titulo);
                        } catch (IOException ex) {
                            Logger.getLogger(TelaServidor.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    TelaConsultaComponente frameConsulta = new TelaConsultaComponente();
                    frameConsulta.setVisible(true);
                        try {
                        Class.forName(ConexaoBanco.DRIVER);
                        con = DriverManager.getConnection(ConexaoBanco.URL, ConexaoBanco.USER, ConexaoBanco.PASSWORD);
                        String SQLSelectComponente = "select * from Servidor, Componente, TipoComponente where fkServidor = idServidor and fkTipoComponente = idTipoComponente order by nomeServidor asc;";
                        ResultSet rsComponente = stm.executeQuery(SQLSelectComponente);
                        DefaultListModel dlm = new DefaultListModel();
                        while(rsComponente.next()) {
                            dlm.addElement(rsComponente.getString("nomeServidor")+": "+ rsComponente.getString("tipo") + ", "+ rsComponente.getString("metrica"));
                        }
                        frameConsulta.jlListaCadastro.setModel(dlm);

                        String SQLSelectServidor = "select * from Servidor order by nomeServidor asc;";
                        ResultSet rsServidor = stm.executeQuery(SQLSelectServidor);
                        frameConsulta.jcbFiltro.addItem("Todos");
                        while(rsServidor.next()) {
                            frameConsulta.jcbFiltro.addItem(rsServidor.getString("NomeServidor"));
                        }

                    } catch (ClassNotFoundException | SQLException ex) {
                        Logger.getLogger(TelaServidor.class.getName()).log(Level.SEVERE, null, ex);
                    } finally { 
                        try{ 
                            con.close(); // Após finalizar processo, fecha a conexão
                        }catch(SQLException onConClose){
                            System.out.println("Houve erro no fechamento da conexão");
                            JOptionPane.showMessageDialog(null,"Erro na conexão, com o banco de dados!","Erro de conexão",JOptionPane.WARNING_MESSAGE);
                            onConClose.printStackTrace();
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null,"O componente não pode ser editado com o valor antigo","Erro ao editar componente",JOptionPane.ERROR_MESSAGE);
                }
                            
                            
                        } else if (senha.equals("")){
                        JOptionPane.showMessageDialog(null, "Senha não preenchida");
                    } else if (senha_ok == 0){
                        JOptionPane.showMessageDialog(null, "Senha incorreta");
                    }
                // Em caso de erro com conexão, gera aviso
                }catch(SQLException e){
                    e.printStackTrace(); //vejamos que erro foi gerado e quem o gerou
                    JOptionPane.showMessageDialog(null,"Erro na conexão, com o banco de dados!","Erro de Conexão",JOptionPane.WARNING_MESSAGE);
                } catch (ClassNotFoundException ex) { 
                Logger.getLogger(TelaCadastro.class.getName()).log(Level.SEVERE, null, ex);
            }finally { 
                    try{ 
                        con.close(); // Após finalizar processo, fecha a conexão
                    }catch(SQLException onConClose){
                        System.out.println("Houve erro no fechamento da conexão");
                        JOptionPane.showMessageDialog(null,"Erro na conexão, com o banco de dados!","Erro de conexão",JOptionPane.WARNING_MESSAGE);
                        onConClose.printStackTrace();
                    }
                }
            } else {
                senha_ok++;
            }
        }  
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(TelaConsultaComponente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void jcbCompEditaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCompEditaActionPerformed
        
    }//GEN-LAST:event_jcbCompEditaActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(TelaEdicaoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(TelaEdicaoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(TelaEdicaoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(TelaEdicaoComponente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TelaEdicaoComponente().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    protected javax.swing.JComboBox<String> jcbCompEdita;
    protected javax.swing.JLabel lbSelecionado;
    // End of variables declaration//GEN-END:variables
}
